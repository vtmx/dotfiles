" ------------------------------------------------------------------------------
" Options
" ------------------------------------------------------------------------------

" init with one pane
only
colorscheme onedarkv

set syscalls
set trash
set trashdir=~/.local/share/Trash/
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks,bmarks
set nofollowlinks
set sortnumbers
set norunexec
set wildmenu
set wildstyle=popup
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers
set ignorecase
set smartcase
set nohlsearch
set incsearch
set scrolloff=4
set vimhelp
set history=100
set undolevels=100
set timefmt='%d/%m/%Y %H:%M'
" set tablabel=" "
" set viewcolumns=-{name},5{size},5{ext},17{mtime}
set statusline=" "
set rulerformat=" "

" ------------------------------------------------------------------------------
" Mappings
" ------------------------------------------------------------------------------

" reload
nnoremap <c-r> :restart<cr> :echo "Reload"<cr>

" disable space
nnoremap <space> <nop>

" select and go next item
nnoremap <space> tj

" move
nnoremap J 5j
nnoremap K 5k

" rename
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" start shell in current directory
nnoremap S :shell<cr>

" display sorting dialog
nnoremap s :sort<cr>

" toggle review window
nnoremap w :view<cr>
vnoremap w :view<cr>gv
 
"split
nnoremap ss <c-w>s
nnoremap vv <c-w>v
nnoremap oo <c-w>o

" go to
nnoremap <c-h> <c-w>h
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l

" resize
nnoremap <a-l> <c-w>-
nnoremap <a-h> <c-w>+

" tab
nnoremap <a-n> :tabnew<cr>
nnoremap <a-l> :tabnext<cr>
nnoremap <a-h> :tabprevious<cr> 
nnoremap <a-w> :tabclose<cr> 

" remove highlight search
nnoremap <esc> :nohlsearch<cr>

" mark
nnoremap M '

" midnight commander alike mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f2> cW<c-u>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>

" open current directory in the other pane
nnoremap <a-i> :sync<cr>

" open directory under cursor in the other pane
nnoremap <a-o> :sync %c<cr>

" exit
nnoremap q :quit<cr> 

" ------------------------------------------------------------------------------
" Bookmarks
" ------------------------------------------------------------------------------

mark h ~/
mark c ~/Dev/dotfiles/config
mark t ~/Downloads/temp

" references
" https://github.com/vifm/vifm/blob/0e1dded1d6a506619fab690d3ba055cc7cb8f74d/data/vifmrc
" https://github.com/Jenyay/vifmrc/blob/master/vifmrc
" https://github.com/onovy/vifmrc/blob/master/vifmrc
" https://vifm.info/cheatsheets.shtml
" https://vifm.info/manual.shtml

" ------------------------------------------------------------------------------
" Commands
" ------------------------------------------------------------------------------

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %c.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart full

if executable('nvim')
  set vicmd=nvim
elseif $EDITOR != ''
  echo 'Note: using `'.$EDITOR.'` as an editor'
  let &vicmd = $EDITOR
endif

" ------------------------------------------------------------------------------
" Fileview
" ------------------------------------------------------------------------------

" syntax highlighting
fileviewer {*.css,*.lua}
  \ bat --color always --wrap never --pager never %c -p

" pictures in terminal
fileviewer *.jpg,*.png shellpic %c

" ------------------------------------------------------------------------------
" Clipboard
" ------------------------------------------------------------------------------

" Interaction with system clipboard
if has('win')
    " Yank current directory path to Windows clipboard with forward slashes
    nnoremap yp :!echo %"d:gs!\!/! %i | clip<cr>
    " Yank path to current file to Windows clipboard with forward slashes
    nnoremap yf :!echo %"c:gs!\!/! %i | clip<cr>
elseif $WAYLAND_DISPLAY
    if executable('wl-copy')
        " Yank current directory path into primary and selection clipboards
        nnoremap yd :!echo -n %d | wl-copy %i &&
                    \ echo -n %d | wl-copy -p %i<cr>
        " Yank current file path into into primary and selection clipboards
        nnoremap yf :!echo -n %c:p | wl-copy %i &&
                    \ echo -n %c:p | wl-copy -p %i<cr>
    endif
elseif $DISPLAY
    if executable('xclip')
        " Yank current directory path into the clipboard
        nnoremap yd :!echo %d | xclip %i<cr>
        " Yank current file path into the clipboard
        nnoremap yf :!echo %c:p | xclip %i<cr>
    elseif executable('xsel')
        " Yank current directory path into primary and selection clipboards
        nnoremap yd :!echo -n %d | xsel --input --primary %i &&
                    \ echo -n %d | xsel --clipboard --input %i<cr>
        " Yank current file path into into primary and selection clipboards
        nnoremap yf :!echo -n %c:p | xsel --input --primary %i &&
                    \ echo -n %c:p | xsel --clipboard --input %i<cr>
    endif
endif

" open console in current directory
if $DISPLAY && executable('xterm')
  nnoremap ,t :!xterm &<cr>
elseif $TERMINAL
  nnoremap ,t :!$TERMINAL &<cr>
endif

" ------------------------------------------------------------------------------
" File types association
" ------------------------------------------------------------------------------

" Pdf
filextype {*.pdf},<application/pdf> zathura %c %i &, apvlv %c, xpdf %c
fileviewer {*.pdf},<application/pdf> pdftotext -nopgbrk %c -

" PostScript
filextype {*.ps,*.eps,*.ps.gz},<application/postscript>
        \ {View in zathura}
        \ zathura %f,
        \ {View in gv}
        \ gv %c %i &,

" Djvu
filextype {*.djvu},<image/vnd.djvu>
        \ {View in zathura}
        \ zathura %f,
        \ {View in apvlv}
        \ apvlv %f,

" Audio
filetype {*.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus},
        \<audio/*>
       \ {Play using ffplay}
       \ ffplay -nodisp -hide_banner -autoexit %c,
       \ {Play using MPlayer}
       \ mplayer %c,
       \ {Play using mpv}
       \ mpv --no-video %c %s,
fileviewer {*.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus,
           \*.aac}
         \ ffprobe -hide_banner -pretty %c 2>&1

" Video
filextype {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
          \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
          \*.as[fx]},
         \<video/*>
        \ {View using ffplay}
        \ ffplay -fs -hide_banner -autoexit %f,
        \ {View using Dragon}
        \ dragon %f:p,
        \ {View using mplayer}
        \ mplayer %f,
        \ {Play using mpv}
        \ mpv --no-video %c %s,
fileviewer {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
           \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
           \*.as[fx]},
          \<video/*>
         \ ffprobe -hide_banner -pretty %c 2>&1

" Web
filextype {*.xhtml,*.html,*.htm},<text/html>
        \ {Open with qutebrowser}
        \ qutebrowser %f %i &,
        \ {Open with firefox}
        \ firefox %f &,
filetype {*.xhtml,*.html,*.htm},<text/html> links, lynx

" Object
filetype {*.o},<application/x-object> nm %f | less

" Man page
filetype {*.[1-8]},<text/troff> man ./%c
fileviewer {*.[1-8]},<text/troff> man ./%c | col -b

" Images
filextype {*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
        \ {View in sxiv}
        \ sxiv %f,
        \ {View in gpicview}
        \ gpicview %c,
        \ {View in shotwell}
        \ shotwell,
        \ {View in gwenview}
        \ gwenview,
fileviewer {*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
         \ identify %f

" OpenRaster
filextype *.ora
        \ {Edit in MyPaint}
        \ mypaint %f,

" Mindmap
filextype *.vym
        \ {Open with VYM}
        \ vym %f &,

" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f %S,

" SHA1
filetype *.sha1
       \ {Check SHA1 hash sum}
       \ sha1sum -c %f %S,

" SHA256
filetype *.sha256
       \ {Check SHA256 hash sum}
       \ sha256sum -c %f %S,

" SHA512
filetype *.sha512
       \ {Check SHA512 hash sum}
       \ sha512sum -c %f %S,

" GPG signature
filetype {*.asc},<application/pgp-signature>
       \ {Check signature}
       \ !!gpg --verify %c,

" Torrent
filetype {*.torrent},<application/x-bittorrent> ktorrent %f &
fileviewer {*.torrent},<application/x-bittorrent> dumptorrent -v %c

" FuseZipMount
filetype {*.zip,*.jar,*.war,*.ear,*.oxt,*.apkg},
        \<application/zip,application/java-archive>
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {View contents}
       \ tar -tf %f | less,
       \ {Extract here}
       \ tar -vxf %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt tar -tf %f

" ArchiveMount
filetype {*.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz,*.tar.zst,
         \*.tzst},
        \<application/x-tar>
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.xz,*.txz tar -tJf %c
fileviewer *.tar.zst,*.tzst tar -t --zstd -f %c
fileviewer {*.tar},<application/x-tar> tar -tf %c

" Rar2FsMount and rar archives
filetype {*.rar},<application/x-rar>
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer {*.rar},<application/x-rar> unrar v %c

" IsoMount
filetype {*.iso},<application/x-iso9660-image>
       \ {Mount with fuseiso}
       \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,

" FtpMount
filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,

" Fuse7z and 7z archives
filetype {*.7z},<application/x-7z-compressed>
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer {*.7z},<application/x-7z-compressed> 7z l %c

" Office files
filextype {*.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx,*.ppt},
         \<application/vnd.openxmlformats-officedocument.*,
          \application/msword,
          \application/vnd.ms-excel>
        \ libreoffice %f &
fileviewer {*.doc},<application/msword> catdoc %c
fileviewer {*.docx},
          \<application/
           \vnd.openxmlformats-officedocument.wordprocessingml.document>
         \ docx2txt.pl %f -

" TuDu files
filetype *.tudu tudu -f %c

" Qt projects
filextype *.pro qtcreator %f &

" Directories
filextype */
        \ {View in thunar}
        \ Thunar %f &,

" vim: ft=vim
