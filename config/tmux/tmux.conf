# Options
set -ga terminal-overrides ',xterm*:Tc'
set -g default-command bash
set -g default-shell '/usr/bin/bash'
set -g display-time 1000
set -g escape-time 5
set -g history-limit 1000
set -g mode-keys vi
set -g mouse on
set -g set-titles on

# Style
set -g message-style bg=default,fg=default
set -g mode-style bg=blue,fg=black # select
set -g pane-border-style fg=brightblack
set -g pane-active-border-style fg=brightblack
set -g status-style bg=default,fg=white
set -g window-status-current-style bg=default,fg=brightwhite

# Status
set -g status-left ''
set -g status-right ''
set -g base-index 1
set -g pane-base-index 1
set -g window-status-current-format ' #I:#{pane_current_command} '
set -g window-status-format ' #I:#{pane_current_command} '

# Unbind
unbind -T copy-mode-vi MouseDragEnd1Pane
unbind C-b
unbind l # last-window
unbind n # next-window

# Prefix
set -g prefix C-Space
bind C-Space send-prefix

# Reload
bind -n M-r source-file $HOME/.config/tmux/.tmux.conf \; display-message 'Reloaded'
bind r source-file $HOME/.config/tmux/.tmux.conf \; display-message 'Reloaded'

# Find
bind f command-prompt -p find-session 'switch-client -t %%'

# Toggle status bar
bind -n M-b set -g status

# Vim copy
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind -T copy-mode-vi 'H' send -X start-of-line
bind -T copy-mode-vi 'L' send -X end-of-line
bind p paste-buffer

# Pane

# New
bind -n M-Enter if -F '#{e|>=|:#{e|*|:8,#{pane_width}},#{e|*|:20,#{pane_height}}}' \
'split-window -p 50 -h -c "#{pane_current_path}"' \
'split-window -p 50 -c "#{pane_current_path}"'

bind Enter if -F '#{e|>=|:#{e|*|:8,#{pane_width}},#{e|*|:20,#{pane_height}}}' \
'split-window -p 50 -h -c "#{pane_current_path}"' \
'split-window -p 50 -c "#{pane_current_path}"'

# Select
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n 'M-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind -n 'M-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind -n 'M-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind -n 'M-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' "bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' "bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind -T copy-mode-vi 'M-h' select-pane -L
bind -T copy-mode-vi 'M-j' select-pane -D
bind -T copy-mode-vi 'M-k' select-pane -U
bind -T copy-mode-vi 'M-l' select-pane -R

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Swap
bind H swap-pane -L
bind J swap-pane -D
bind K swap-pane -U
bind L swap-pane -R

# Split
bind v split-window -h -p 50 -c '#{pane_current_path}'
bind s split-window -p 50 -c '#{pane_current_path}'

# Resize
bind -n M-Up resize-pane -U 5
bind -n M-Down resize-pane -D 5
bind -n M-Left resize-pane -L 5
bind -n M-Right resize-pane -R 5

# Window

# New
bind -n M-n new-window -c '#{pane_current_path}'
bind n new-window -c '#{pane_current_path}'

# Select
bind -n M-. next-window
bind -n M-, previous-window
bind . next-window
bind , previous-window
bind -n M-1 selectw -t 1
bind -n M-2 selectw -t 2
bind -n M-3 selectw -t 3
bind -n M-4 selectw -t 4
bind -n M-5 selectw -t 5
bind -n M-6 selectw -t 6
bind -n M-7 selectw -t 7
bind -n M-8 selectw -t 8
bind -n M-9 selectw -t 9

# Close
bind c kill-window

# Swap
bind > swap-window -t +1 \; select-window +1
bind < swap-window -t -1 \\ select-window -1

