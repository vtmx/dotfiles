#!/usr/bin/env bash

# Check if inverse i or -i
if [[ "$1" =~ ^-?i$ ]]; then
  inverse="true"
  shift
fi

# Get dir and file
if [[ -d "$2" ]]; then
  dir="$2"
  pattern="$1"
elif [[ "$1" ]]; then
  dir="."
  pattern="$1" 
else
  dir="."
fi

mapfile -t files < <(find "$dir" -type f)

# Count total files
numberfiles=${#files[@]}
digit=${#numberfiles}

# Default 2 digits
[[ $digit == 1 ]] && digit=2

listfiles() {
  count=1
  for file in "${files[@]}"; do
    # Remove path
    filename="${file##*/}"
    # Remove ext
    filename="${filename%*.*}"

    ext="${file##*.}"

    if [[ "$pattern" ]]; then
      if [[ $inverse ]]; then
        newfile=$(printf "%s/%0${digit}d-%s.%s\n" "$(dirname "$file")" "$count" "$pattern" "$ext")
      else
        newfile=$(printf "%s/%s-%0${digit}d.%s\n" "$(dirname "$file")" "$pattern" "$count" "$ext")
      fi
    else
      if [[ $inverse ]]; then
        newfile=$(printf "%s/%0${digit}d-%s.%s\n" "$(dirname "$file")" "$count" "$filename" "$ext")
      else
        newfile=$(printf "%s/%s-%0${digit}d.%s\n" "$(dirname "$file")" "$filename" "$count" "$ext")
      fi
    fi

    case $1 in
      mv) mv "$file" "$newfile" ;;
       *) echo "$file >> $newfile" ;;
    esac

    ((count++))
  done
}

# List files
listfiles
echo
read -p "Rename? [y/N]: " rename

case $rename in
  [yY]) listfiles mv ;;
     *) exit 0       ;;
esac
